{
	"Print variable to console": {
		"prefix": "vlog",
		"body": [
			"console.log('$1', $1)"
		]
	},
	"Public Readonly": {
		"prefix": "pr",
		"body": [
			"public readonly ${0}"
		]
	},
	"Private Readonly": {
		"prefix": "prr",
		"body": [
			"private readonly ${0}"
		]
	},
	"Create Class": {
		"prefix": "tsc",
		"body": [
			"export class ${TM_FILENAME_BASE} {",
			"  ${0}",
			"}"
		]
	},
	"Create Enum": {
		"prefix": "tse",
		"body": [
			"export enum ${TM_FILENAME_BASE} {",
			"  ${0}",
			"}"
		]
	},
	"Create Abstract Class": {
		"prefix": "tsac",
		"body": [
			"export abstract class ${TM_FILENAME_BASE} {",
			"  ${0}",
			"}"
		]
	},
	"Create Abstract Class (extends)": {
		"prefix": "tsace",
		"body": [
			"export abstract class ${TM_FILENAME_BASE} extends ${0} {",
			"}"
		]
	},
	"Create Class (extends)": {
		"prefix": "tsce",
		"body": [
			"export class ${TM_FILENAME_BASE} extends ${0} {",
			"}"
		]
	},
	"Create Class (implements)": {
		"prefix": "tsci",
		"body": [
			"export class ${TM_FILENAME_BASE} implements ${0} {",
			"}"
		]
	},
	"Create Interface": {
		"prefix": "tsi",
		"body": [
			"export interface ${TM_FILENAME_BASE} {",
			"  ${0}",
			"}"
		]
	},
	"Create Interface (extends)": {
		"prefix": "tsie",
		"body": [
			"export interface ${TM_FILENAME_BASE} extends ${0} {",
			"}"
		]
	},
	"It (sync)": {
		"prefix": "its",
		"body": [
			"it('$1', () => {",
			"  ${0}",
			"})"
		]
	},
	"It (async)": {
		"prefix": "itas",
		"body": [
			"it('$1', async () => {",
			"  ${0}",
			"})"
		]
	},
	"Describe": {
		"prefix": "dsc",
		"body": [
			"describe('$1', () => {",
			"  ${0}",
			"})"
		]
	},
	"Before Each (sync)": {
		"prefix": "bes",
		"body": [
			"beforeEach(() => {",
			"  ${0}",
			"})"
		]
	},
	"Before Each (async)": {
		"prefix": "bea",
		"body": [
			"beforeEach(async () => {",
			"  ${0}",
			"})"
		]
	},
	"Before All (sync)": {
		"prefix": "bas",
		"body": [
			"beforeAll(() => {",
			"  ${0}",
			"})"
		]
	},
	"Before All (async)": {
		"prefix": "baa",
		"body": [
			"beforeAll(async () => {",
			"  ${0}",
			"})"
		]
	},
	"After Each (sync)": {
		"prefix": "aes",
		"body": [
			"beforeEach(() => {",
			"  ${0}",
			"})"
		]
	},
	"After Each (async)": {
		"prefix": "aea",
		"body": [
			"afterEach(async () => {",
			"  ${0}",
			"})"
		]
	},
	"After All (sync)": {
		"prefix": "aas",
		"body": [
			"afterAll(() => {",
			"  ${0}",
			"})"
		]
	},
	"After All (async)": {
		"prefix": "aaa",
		"body": [
			"afterAll(async () => {",
			"  ${0}",
			"})"
		]
	}
}
